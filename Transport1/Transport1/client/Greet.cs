// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: greet.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Transport1 {

  /// <summary>Holder for reflection information generated from greet.proto</summary>
  public static partial class GreetReflection {

    #region Descriptor
    /// <summary>File descriptor for greet.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GreetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtncmVldC5wcm90bxIFR3JlZXQiZQoEVXNlchIPCgdpZF91c2VyGAEgASgF",
            "EgwKBE5hbWUYAiABKAkSEgoKU2Vjb25kTmFtZRgDIAEoCRINCgVQaG9uZRgE",
            "IAEoCRINCgVFbWFpbBgFIAEoCRIMCgRDYXJkGAYgASgJIh4KC1VzZXJSZXF1",
            "ZXN0Eg8KB2lkX3VzZXIYASABKAUibQoGRHJpdmVyEhEKCWlkX2RyaXZlchgB",
            "IAEoBRIMCgROYW1lGAIgASgJEhIKClNlY29uZE5hbWUYAyABKAkSEQoJTWlk",
            "bGVOYW1lGAQgASgJEg0KBVBob25lGAUgASgJEgwKBENhcmQYBiABKAkiIgoD",
            "QnVzEg4KBmlkX2J1cxgBIAEoBRILCgNCdXMYAiABKAkiKAoFUm91dGUSEAoI",
            "aWRfcm91dGUYASABKAUSDQoFUm91dGUYAiABKAkiTwoHSGlzdG9yeRISCgpp",
            "ZF9oaXN0b3J5GAEgASgFEg8KB2lkX3VzZXIYAiABKAUSDAoEY2FzaBgDIAEo",
            "BRIRCglpZF9kcml2ZXIYBCABKAUiJAoOSGlzdG9yeVJlcXVlc3QSEgoKaWRf",
            "aGlzdG9yeRgBIAEoBSIgCgxSb3V0ZVJlcXVlc3QSEAoIaWRfcm91dGUYASAB",
            "KAUiOQoIUmVzcG9uc2USLQoVTW9kaWZpY2F0aW9uX1Jlc3BvbnNlGAEgASgO",
            "Mg4uR3JlZXQuQ2hhbmdlcypUCgdDaGFuZ2VzEgsKB1Vua25vd24QABIKCgZB",
            "RERfT0sQARIOCgpBRERfRkFJTEVEEAISDQoJVVBEQVRFX09LEAMSEQoNVVBE",
            "QVRFX0ZBSUxFRBAEMuYDChBUcmFuc3BvcnRTZXJ2aWNlEicKB0FkZFVzZXIS",
            "Cy5HcmVldC5Vc2VyGg8uR3JlZXQuUmVzcG9uc2USKwoJQWRkRHJpdmVyEg0u",
            "R3JlZXQuRHJpdmVyGg8uR3JlZXQuUmVzcG9uc2USJQoGQWRkQnVzEgouR3Jl",
            "ZXQuQnVzGg8uR3JlZXQuUmVzcG9uc2USKQoIQWRkUm91dGUSDC5HcmVldC5S",
            "b3V0ZRoPLkdyZWV0LlJlc3BvbnNlEi0KCkFkZEhpc3RvcnkSDi5HcmVldC5I",
            "aXN0b3J5Gg8uR3JlZXQuUmVzcG9uc2USMwoMR2V0Um91dGVMaXN0EhMuR3Jl",
            "ZXQuUm91dGVSZXF1ZXN0GgwuR3JlZXQuUm91dGUwARI5Cg5HZXRIaXN0b3J5",
            "TGlzdBIVLkdyZWV0Lkhpc3RvcnlSZXF1ZXN0Gg4uR3JlZXQuSGlzdG9yeTAB",
            "Ei8KDEdldE9uZU9mVXNlchISLkdyZWV0LlVzZXJSZXF1ZXN0GgsuR3JlZXQu",
            "VXNlchIqCgpVcGRhdGVVc2VyEgsuR3JlZXQuVXNlchoPLkdyZWV0LlJlc3Bv",
            "bnNlEi4KDFVwZGF0ZURyaXZlchINLkdyZWV0LkRyaXZlchoPLkdyZWV0LlJl",
            "c3BvbnNlQg2qAgpUcmFuc3BvcnQxYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Transport1.Changes), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Transport1.User), global::Transport1.User.Parser, new[]{ "IdUser", "Name", "SecondName", "Phone", "Email", "Card" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transport1.UserRequest), global::Transport1.UserRequest.Parser, new[]{ "IdUser" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transport1.Driver), global::Transport1.Driver.Parser, new[]{ "IdDriver", "Name", "SecondName", "MidleName", "Phone", "Card" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transport1.Bus), global::Transport1.Bus.Parser, new[]{ "IdBus", "Bus_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transport1.Route), global::Transport1.Route.Parser, new[]{ "IdRoute", "Route_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transport1.History), global::Transport1.History.Parser, new[]{ "IdHistory", "IdUser", "Cash", "IdDriver" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transport1.HistoryRequest), global::Transport1.HistoryRequest.Parser, new[]{ "IdHistory" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transport1.RouteRequest), global::Transport1.RouteRequest.Parser, new[]{ "IdRoute" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Transport1.Response), global::Transport1.Response.Parser, new[]{ "ModificationResponse" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Changes {
    [pbr::OriginalName("Unknown")] Unknown = 0,
    [pbr::OriginalName("ADD_OK")] AddOk = 1,
    [pbr::OriginalName("ADD_FAILED")] AddFailed = 2,
    [pbr::OriginalName("UPDATE_OK")] UpdateOk = 3,
    [pbr::OriginalName("UPDATE_FAILED")] UpdateFailed = 4,
  }

  #endregion

  #region Messages
  public sealed partial class User : pb::IMessage<User> {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transport1.GreetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      idUser_ = other.idUser_;
      name_ = other.name_;
      secondName_ = other.secondName_;
      phone_ = other.phone_;
      email_ = other.email_;
      card_ = other.card_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "id_user" field.</summary>
    public const int IdUserFieldNumber = 1;
    private int idUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdUser {
      get { return idUser_; }
      set {
        idUser_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SecondName" field.</summary>
    public const int SecondNameFieldNumber = 3;
    private string secondName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecondName {
      get { return secondName_; }
      set {
        secondName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Phone" field.</summary>
    public const int PhoneFieldNumber = 4;
    private string phone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 5;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Card" field.</summary>
    public const int CardFieldNumber = 6;
    private string card_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Card {
      get { return card_; }
      set {
        card_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdUser != other.IdUser) return false;
      if (Name != other.Name) return false;
      if (SecondName != other.SecondName) return false;
      if (Phone != other.Phone) return false;
      if (Email != other.Email) return false;
      if (Card != other.Card) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdUser != 0) hash ^= IdUser.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SecondName.Length != 0) hash ^= SecondName.GetHashCode();
      if (Phone.Length != 0) hash ^= Phone.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Card.Length != 0) hash ^= Card.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdUser != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IdUser);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (SecondName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SecondName);
      }
      if (Phone.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Phone);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Email);
      }
      if (Card.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Card);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdUser != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdUser);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SecondName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecondName);
      }
      if (Phone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Card.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Card);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.IdUser != 0) {
        IdUser = other.IdUser;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SecondName.Length != 0) {
        SecondName = other.SecondName;
      }
      if (other.Phone.Length != 0) {
        Phone = other.Phone;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Card.Length != 0) {
        Card = other.Card;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdUser = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            SecondName = input.ReadString();
            break;
          }
          case 34: {
            Phone = input.ReadString();
            break;
          }
          case 42: {
            Email = input.ReadString();
            break;
          }
          case 50: {
            Card = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserRequest : pb::IMessage<UserRequest> {
    private static readonly pb::MessageParser<UserRequest> _parser = new pb::MessageParser<UserRequest>(() => new UserRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transport1.GreetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRequest(UserRequest other) : this() {
      idUser_ = other.idUser_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRequest Clone() {
      return new UserRequest(this);
    }

    /// <summary>Field number for the "id_user" field.</summary>
    public const int IdUserFieldNumber = 1;
    private int idUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdUser {
      get { return idUser_; }
      set {
        idUser_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdUser != other.IdUser) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdUser != 0) hash ^= IdUser.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdUser != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IdUser);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdUser != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdUser);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserRequest other) {
      if (other == null) {
        return;
      }
      if (other.IdUser != 0) {
        IdUser = other.IdUser;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdUser = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Driver : pb::IMessage<Driver> {
    private static readonly pb::MessageParser<Driver> _parser = new pb::MessageParser<Driver>(() => new Driver());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Driver> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transport1.GreetReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Driver() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Driver(Driver other) : this() {
      idDriver_ = other.idDriver_;
      name_ = other.name_;
      secondName_ = other.secondName_;
      midleName_ = other.midleName_;
      phone_ = other.phone_;
      card_ = other.card_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Driver Clone() {
      return new Driver(this);
    }

    /// <summary>Field number for the "id_driver" field.</summary>
    public const int IdDriverFieldNumber = 1;
    private int idDriver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdDriver {
      get { return idDriver_; }
      set {
        idDriver_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SecondName" field.</summary>
    public const int SecondNameFieldNumber = 3;
    private string secondName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SecondName {
      get { return secondName_; }
      set {
        secondName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "MidleName" field.</summary>
    public const int MidleNameFieldNumber = 4;
    private string midleName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MidleName {
      get { return midleName_; }
      set {
        midleName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Phone" field.</summary>
    public const int PhoneFieldNumber = 5;
    private string phone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Card" field.</summary>
    public const int CardFieldNumber = 6;
    private string card_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Card {
      get { return card_; }
      set {
        card_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Driver);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Driver other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdDriver != other.IdDriver) return false;
      if (Name != other.Name) return false;
      if (SecondName != other.SecondName) return false;
      if (MidleName != other.MidleName) return false;
      if (Phone != other.Phone) return false;
      if (Card != other.Card) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdDriver != 0) hash ^= IdDriver.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SecondName.Length != 0) hash ^= SecondName.GetHashCode();
      if (MidleName.Length != 0) hash ^= MidleName.GetHashCode();
      if (Phone.Length != 0) hash ^= Phone.GetHashCode();
      if (Card.Length != 0) hash ^= Card.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdDriver != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IdDriver);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (SecondName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SecondName);
      }
      if (MidleName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MidleName);
      }
      if (Phone.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Phone);
      }
      if (Card.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Card);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdDriver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdDriver);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SecondName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SecondName);
      }
      if (MidleName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MidleName);
      }
      if (Phone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
      }
      if (Card.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Card);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Driver other) {
      if (other == null) {
        return;
      }
      if (other.IdDriver != 0) {
        IdDriver = other.IdDriver;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SecondName.Length != 0) {
        SecondName = other.SecondName;
      }
      if (other.MidleName.Length != 0) {
        MidleName = other.MidleName;
      }
      if (other.Phone.Length != 0) {
        Phone = other.Phone;
      }
      if (other.Card.Length != 0) {
        Card = other.Card;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdDriver = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            SecondName = input.ReadString();
            break;
          }
          case 34: {
            MidleName = input.ReadString();
            break;
          }
          case 42: {
            Phone = input.ReadString();
            break;
          }
          case 50: {
            Card = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Bus : pb::IMessage<Bus> {
    private static readonly pb::MessageParser<Bus> _parser = new pb::MessageParser<Bus>(() => new Bus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Bus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transport1.GreetReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bus(Bus other) : this() {
      idBus_ = other.idBus_;
      bus_ = other.bus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bus Clone() {
      return new Bus(this);
    }

    /// <summary>Field number for the "id_bus" field.</summary>
    public const int IdBusFieldNumber = 1;
    private int idBus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdBus {
      get { return idBus_; }
      set {
        idBus_ = value;
      }
    }

    /// <summary>Field number for the "Bus" field.</summary>
    public const int Bus_FieldNumber = 2;
    private string bus_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bus_ {
      get { return bus_; }
      set {
        bus_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Bus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Bus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdBus != other.IdBus) return false;
      if (Bus_ != other.Bus_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdBus != 0) hash ^= IdBus.GetHashCode();
      if (Bus_.Length != 0) hash ^= Bus_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdBus != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IdBus);
      }
      if (Bus_.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Bus_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdBus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdBus);
      }
      if (Bus_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bus_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Bus other) {
      if (other == null) {
        return;
      }
      if (other.IdBus != 0) {
        IdBus = other.IdBus;
      }
      if (other.Bus_.Length != 0) {
        Bus_ = other.Bus_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdBus = input.ReadInt32();
            break;
          }
          case 18: {
            Bus_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Route : pb::IMessage<Route> {
    private static readonly pb::MessageParser<Route> _parser = new pb::MessageParser<Route>(() => new Route());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Route> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transport1.GreetReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Route() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Route(Route other) : this() {
      idRoute_ = other.idRoute_;
      route_ = other.route_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Route Clone() {
      return new Route(this);
    }

    /// <summary>Field number for the "id_route" field.</summary>
    public const int IdRouteFieldNumber = 1;
    private int idRoute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdRoute {
      get { return idRoute_; }
      set {
        idRoute_ = value;
      }
    }

    /// <summary>Field number for the "Route" field.</summary>
    public const int Route_FieldNumber = 2;
    private string route_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Route_ {
      get { return route_; }
      set {
        route_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Route);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Route other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdRoute != other.IdRoute) return false;
      if (Route_ != other.Route_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdRoute != 0) hash ^= IdRoute.GetHashCode();
      if (Route_.Length != 0) hash ^= Route_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdRoute != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IdRoute);
      }
      if (Route_.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Route_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdRoute != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdRoute);
      }
      if (Route_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Route_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Route other) {
      if (other == null) {
        return;
      }
      if (other.IdRoute != 0) {
        IdRoute = other.IdRoute;
      }
      if (other.Route_.Length != 0) {
        Route_ = other.Route_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdRoute = input.ReadInt32();
            break;
          }
          case 18: {
            Route_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class History : pb::IMessage<History> {
    private static readonly pb::MessageParser<History> _parser = new pb::MessageParser<History>(() => new History());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<History> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transport1.GreetReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public History() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public History(History other) : this() {
      idHistory_ = other.idHistory_;
      idUser_ = other.idUser_;
      cash_ = other.cash_;
      idDriver_ = other.idDriver_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public History Clone() {
      return new History(this);
    }

    /// <summary>Field number for the "id_history" field.</summary>
    public const int IdHistoryFieldNumber = 1;
    private int idHistory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdHistory {
      get { return idHistory_; }
      set {
        idHistory_ = value;
      }
    }

    /// <summary>Field number for the "id_user" field.</summary>
    public const int IdUserFieldNumber = 2;
    private int idUser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdUser {
      get { return idUser_; }
      set {
        idUser_ = value;
      }
    }

    /// <summary>Field number for the "cash" field.</summary>
    public const int CashFieldNumber = 3;
    private int cash_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Cash {
      get { return cash_; }
      set {
        cash_ = value;
      }
    }

    /// <summary>Field number for the "id_driver" field.</summary>
    public const int IdDriverFieldNumber = 4;
    private int idDriver_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdDriver {
      get { return idDriver_; }
      set {
        idDriver_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as History);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(History other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdHistory != other.IdHistory) return false;
      if (IdUser != other.IdUser) return false;
      if (Cash != other.Cash) return false;
      if (IdDriver != other.IdDriver) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdHistory != 0) hash ^= IdHistory.GetHashCode();
      if (IdUser != 0) hash ^= IdUser.GetHashCode();
      if (Cash != 0) hash ^= Cash.GetHashCode();
      if (IdDriver != 0) hash ^= IdDriver.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdHistory != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IdHistory);
      }
      if (IdUser != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(IdUser);
      }
      if (Cash != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Cash);
      }
      if (IdDriver != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(IdDriver);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdHistory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdHistory);
      }
      if (IdUser != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdUser);
      }
      if (Cash != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Cash);
      }
      if (IdDriver != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdDriver);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(History other) {
      if (other == null) {
        return;
      }
      if (other.IdHistory != 0) {
        IdHistory = other.IdHistory;
      }
      if (other.IdUser != 0) {
        IdUser = other.IdUser;
      }
      if (other.Cash != 0) {
        Cash = other.Cash;
      }
      if (other.IdDriver != 0) {
        IdDriver = other.IdDriver;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdHistory = input.ReadInt32();
            break;
          }
          case 16: {
            IdUser = input.ReadInt32();
            break;
          }
          case 24: {
            Cash = input.ReadInt32();
            break;
          }
          case 32: {
            IdDriver = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HistoryRequest : pb::IMessage<HistoryRequest> {
    private static readonly pb::MessageParser<HistoryRequest> _parser = new pb::MessageParser<HistoryRequest>(() => new HistoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HistoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transport1.GreetReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryRequest(HistoryRequest other) : this() {
      idHistory_ = other.idHistory_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HistoryRequest Clone() {
      return new HistoryRequest(this);
    }

    /// <summary>Field number for the "id_history" field.</summary>
    public const int IdHistoryFieldNumber = 1;
    private int idHistory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdHistory {
      get { return idHistory_; }
      set {
        idHistory_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HistoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HistoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdHistory != other.IdHistory) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdHistory != 0) hash ^= IdHistory.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdHistory != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IdHistory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdHistory != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdHistory);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HistoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.IdHistory != 0) {
        IdHistory = other.IdHistory;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdHistory = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RouteRequest : pb::IMessage<RouteRequest> {
    private static readonly pb::MessageParser<RouteRequest> _parser = new pb::MessageParser<RouteRequest>(() => new RouteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RouteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transport1.GreetReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RouteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RouteRequest(RouteRequest other) : this() {
      idRoute_ = other.idRoute_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RouteRequest Clone() {
      return new RouteRequest(this);
    }

    /// <summary>Field number for the "id_route" field.</summary>
    public const int IdRouteFieldNumber = 1;
    private int idRoute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdRoute {
      get { return idRoute_; }
      set {
        idRoute_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RouteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RouteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IdRoute != other.IdRoute) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IdRoute != 0) hash ^= IdRoute.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IdRoute != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(IdRoute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IdRoute != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdRoute);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RouteRequest other) {
      if (other == null) {
        return;
      }
      if (other.IdRoute != 0) {
        IdRoute = other.IdRoute;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IdRoute = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Transport1.GreetReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      modificationResponse_ = other.modificationResponse_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "Modification_Response" field.</summary>
    public const int ModificationResponseFieldNumber = 1;
    private global::Transport1.Changes modificationResponse_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Transport1.Changes ModificationResponse {
      get { return modificationResponse_; }
      set {
        modificationResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModificationResponse != other.ModificationResponse) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ModificationResponse != 0) hash ^= ModificationResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ModificationResponse != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ModificationResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ModificationResponse != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ModificationResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.ModificationResponse != 0) {
        ModificationResponse = other.ModificationResponse;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ModificationResponse = (global::Transport1.Changes) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
